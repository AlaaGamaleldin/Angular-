{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nclass filterPipe {\n  transform(list, filterBy) {\n    if (filterBy.toLowerCase() === 'all' || filterBy === '' || list.length === 0) {\n      return list;\n    } else {\n      relist.filter(std => {\n        return std.gender.toLowerCase() === filterBy.toLowerCase();\n      });\n    }\n  }\n}\n_class = filterPipe;\n_class.ɵfac = function filterPipe_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"filter\",\n  type: _class,\n  pure: true\n});\nexport { filterPipe };","map":{"version":3,"names":["filterPipe","transform","list","filterBy","toLowerCase","length","relist","filter","std","gender","pure"],"sources":["D:\\Angular\\after manoj\\Angular-\\Pipes\\start\\src\\app\\Custom Pipe\\filter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { Student } from \"../Models/Student\";\r\n\r\n@Pipe({name: 'filter'})\r\nexport class filterPipe implements PipeTransform{\r\n    transform(list: Student[], filterBy: string) {\r\n        if(\r\n            filterBy.toLowerCase() === 'all' || filterBy === '' || list.length === 0){\r\n                return list;\r\n    }else{\r\n        relist.filter((std) => {\r\n            return std.gender.toLowerCase() === filterBy.toLowerCase();\r\n        })\r\n    }\r\n}"],"mappings":";;AAGA,MACaA,UAAU;EACnBC,SAASA,CAACC,IAAe,EAAEC,QAAgB;IACvC,IACIA,QAAQ,CAACC,WAAW,EAAE,KAAK,KAAK,IAAID,QAAQ,KAAK,EAAE,IAAID,IAAI,CAACG,MAAM,KAAK,CAAC,EAAC;MACrE,OAAOH,IAAI;KACtB,MAAI;MACDI,MAAM,CAACC,MAAM,CAAEC,GAAG,IAAI;QAClB,OAAOA,GAAG,CAACC,MAAM,CAACL,WAAW,EAAE,KAAKD,QAAQ,CAACC,WAAW,EAAE;MAC9D,CAAC,CAAC;;EAEV;;SAVaJ,UAAU;;mBAAVA,MAAU;AAAA;;;QAAVA,MAAU;EAAAU,IAAA;AAAA;SAAVV,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}