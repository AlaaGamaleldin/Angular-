{"ast":null,"code":"var _class;\nimport { inject } from '@angular/core';\nimport { StudentService } from '../Services/student.service';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"name\"];\nconst _c1 = [\"gender\"];\nconst _c2 = [\"dob\"];\nconst _c3 = [\"course\"];\nconst _c4 = [\"marks\"];\nconst _c5 = [\"fee\"];\nconst _c6 = [\"editName\"];\nconst _c7 = [\"editGender\"];\nconst _c8 = [\"editDob\"];\nconst _c9 = [\"editCourse\"];\nconst _c10 = [\"editMarks\"];\nconst _c11 = [\"editFee\"];\nclass AdminComponent {\n  constructor() {\n    this.studentService = inject(StudentService);\n    this.isEditing = false;\n    this.isInserting = false;\n  }\n  ngOnInit() {\n    this.students = this.studentService.students;\n    this.totalMarks = this.studentService.totalMarks;\n  }\n  OnInsertClicked() {\n    this.isInserting = true;\n  }\n  OnInsertCancelled() {\n    this.isInserting = false;\n  }\n  OnInsertSaved() {\n    this.studentService.CreateStudent(this.Name.nativeElement.value, this.Gender.nativeElement.value, this.Dob.nativeElement.value, this.Course.nativeElement.value, this.Marks.nativeElement.value, this.Fee.nativeElement.value);\n    this.isInserting = false;\n  }\n  OnEditClicked(stdId) {\n    this.isEditing = true;\n    this.stdIdToEdit = stdId;\n  }\n  OnEditCancelled() {\n    this.isEditing = false;\n  }\n  OnEditSaved(student) {\n    student.name = this.editName.nativeElement.value;\n    student.gender = this.editGender.nativeElement.value;\n    student.dob = this.editDob.nativeElement.value;\n    student.course = this.editCourse.nativeElement.value;\n    student.marks = this.editMarks.nativeElement.value;\n    student.fee = this.editFee.nativeElement.value;\n    this.isEditing = false;\n  }\n}\n_class = AdminComponent;\n_class.ɵfac = function AdminComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-admin\"]],\n  viewQuery: function AdminComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n      i0.ɵɵviewQuery(_c3, 5);\n      i0.ɵɵviewQuery(_c4, 5);\n      i0.ɵɵviewQuery(_c5, 5);\n      i0.ɵɵviewQuery(_c6, 5);\n      i0.ɵɵviewQuery(_c7, 5);\n      i0.ɵɵviewQuery(_c8, 5);\n      i0.ɵɵviewQuery(_c9, 5);\n      i0.ɵɵviewQuery(_c10, 5);\n      i0.ɵɵviewQuery(_c11, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.Name = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.Gender = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.Dob = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.Course = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.Marks = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.Fee = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editName = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editGender = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editDob = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editCourse = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editMarks = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editFee = _t.first);\n    }\n  },\n  decls: 0,\n  vars: 0,\n  template: function AdminComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\nexport { AdminComponent };","map":{"version":3,"names":["inject","StudentService","AdminComponent","constructor","studentService","isEditing","isInserting","ngOnInit","students","totalMarks","OnInsertClicked","OnInsertCancelled","OnInsertSaved","CreateStudent","Name","nativeElement","value","Gender","Dob","Course","Marks","Fee","OnEditClicked","stdId","stdIdToEdit","OnEditCancelled","OnEditSaved","student","name","editName","gender","editGender","dob","editDob","course","editCourse","marks","editMarks","fee","editFee","selectors","viewQuery","AdminComponent_Query","rf","ctx"],"sources":["D:\\Angular\\after manoj\\Angular-\\Pipes\\start\\src\\app\\admin\\admin.component.ts"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild, inject } from '@angular/core';\nimport { StudentService } from '../Services/student.service';\nimport { Student } from '../Models/Student';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html'\n})\nexport class AdminComponent implements OnInit {\n  studentService: StudentService = inject(StudentService);\n\n  isEditing: boolean = false;\n  isInserting: boolean = false;\n  stdIdToEdit: number;\n\n  students: Student[];\n  totalMarks: number;\n  \n  //PROPERTIES FOR INSERTING\n  @ViewChild('name') Name: ElementRef;\n  @ViewChild('gender') Gender: ElementRef;\n  @ViewChild('dob') Dob: ElementRef;\n  @ViewChild('course') Course: ElementRef;\n  @ViewChild('marks') Marks: ElementRef;\n  @ViewChild('fee') Fee: ElementRef;\n\n  //PROPERTIES FOR EDITING\n  @ViewChild('editName') editName: ElementRef;\n  @ViewChild('editGender') editGender: ElementRef;\n  @ViewChild('editDob') editDob: ElementRef;\n  @ViewChild('editCourse') editCourse: ElementRef;\n  @ViewChild('editMarks') editMarks: ElementRef;\n  @ViewChild('editFee') editFee: ElementRef;\n\n  ngOnInit(){\n    this.students = this.studentService.students;\n    this.totalMarks = this.studentService.totalMarks;\n  }\n\n  OnInsertClicked(){\n    this.isInserting = true;\n  }\n  OnInsertCancelled(){\n    this.isInserting = false;\n  }\n  OnInsertSaved(){\n    this.studentService.CreateStudent(\n      this.Name.nativeElement.value, \n      this.Gender.nativeElement.value, \n      this.Dob.nativeElement.value, \n      this.Course.nativeElement.value, \n      this.Marks.nativeElement.value, \n      this.Fee.nativeElement.value\n    );\n    this.isInserting = false;\n  }\n\n  OnEditClicked(stdId: number){\n    this.isEditing = true;\n    this.stdIdToEdit = stdId;\n  }\n  OnEditCancelled(){\n    this.isEditing = false;\n  }\n\n  OnEditSaved(student: Student){\n      student.name = this.editName.nativeElement.value; \n      student.gender = this.editGender.nativeElement.value; \n      student.dob = this.editDob.nativeElement.value; \n      student.course = this.editCourse.nativeElement.value; \n      student.marks = this.editMarks.nativeElement.value; \n      student.fee = this.editFee.nativeElement.value;\n\n      this.isEditing = false;\n  }\n}\n"],"mappings":";AAAA,SAAmDA,MAAM,QAAQ,eAAe;AAChF,SAASC,cAAc,QAAQ,6BAA6B;;;;;;;;;;;;;;AAG5D,MAIaC,cAAc;EAJ3BC,YAAA;IAKE,KAAAC,cAAc,GAAmBJ,MAAM,CAACC,cAAc,CAAC;IAEvD,KAAAI,SAAS,GAAY,KAAK;IAC1B,KAAAC,WAAW,GAAY,KAAK;;EAsB5BC,QAAQA,CAAA;IACN,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACJ,cAAc,CAACI,QAAQ;IAC5C,IAAI,CAACC,UAAU,GAAG,IAAI,CAACL,cAAc,CAACK,UAAU;EAClD;EAEAC,eAAeA,CAAA;IACb,IAAI,CAACJ,WAAW,GAAG,IAAI;EACzB;EACAK,iBAAiBA,CAAA;IACf,IAAI,CAACL,WAAW,GAAG,KAAK;EAC1B;EACAM,aAAaA,CAAA;IACX,IAAI,CAACR,cAAc,CAACS,aAAa,CAC/B,IAAI,CAACC,IAAI,CAACC,aAAa,CAACC,KAAK,EAC7B,IAAI,CAACC,MAAM,CAACF,aAAa,CAACC,KAAK,EAC/B,IAAI,CAACE,GAAG,CAACH,aAAa,CAACC,KAAK,EAC5B,IAAI,CAACG,MAAM,CAACJ,aAAa,CAACC,KAAK,EAC/B,IAAI,CAACI,KAAK,CAACL,aAAa,CAACC,KAAK,EAC9B,IAAI,CAACK,GAAG,CAACN,aAAa,CAACC,KAAK,CAC7B;IACD,IAAI,CAACV,WAAW,GAAG,KAAK;EAC1B;EAEAgB,aAAaA,CAACC,KAAa;IACzB,IAAI,CAAClB,SAAS,GAAG,IAAI;IACrB,IAAI,CAACmB,WAAW,GAAGD,KAAK;EAC1B;EACAE,eAAeA,CAAA;IACb,IAAI,CAACpB,SAAS,GAAG,KAAK;EACxB;EAEAqB,WAAWA,CAACC,OAAgB;IACxBA,OAAO,CAACC,IAAI,GAAG,IAAI,CAACC,QAAQ,CAACd,aAAa,CAACC,KAAK;IAChDW,OAAO,CAACG,MAAM,GAAG,IAAI,CAACC,UAAU,CAAChB,aAAa,CAACC,KAAK;IACpDW,OAAO,CAACK,GAAG,GAAG,IAAI,CAACC,OAAO,CAAClB,aAAa,CAACC,KAAK;IAC9CW,OAAO,CAACO,MAAM,GAAG,IAAI,CAACC,UAAU,CAACpB,aAAa,CAACC,KAAK;IACpDW,OAAO,CAACS,KAAK,GAAG,IAAI,CAACC,SAAS,CAACtB,aAAa,CAACC,KAAK;IAClDW,OAAO,CAACW,GAAG,GAAG,IAAI,CAACC,OAAO,CAACxB,aAAa,CAACC,KAAK;IAE9C,IAAI,CAACX,SAAS,GAAG,KAAK;EAC1B;;SAlEWH,cAAc;;mBAAdA,MAAc;AAAA;;QAAdA,MAAc;EAAAsC,SAAA;EAAAC,SAAA,WAAAC,qBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAAdzC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}