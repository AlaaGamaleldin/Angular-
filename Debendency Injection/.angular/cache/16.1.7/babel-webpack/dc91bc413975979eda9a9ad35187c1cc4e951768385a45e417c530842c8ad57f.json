{"ast":null,"code":"var _class;\nimport { __decorate, __param } from \"tslib\";\nimport { User } from \"../Models/User\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./logger.service\";\nlet UserService = (_class = class UserService {\n  constructor(logger) {\n    this.users = [new User('steve smith', 'male', 'monthle', 'active'), new User('Alaa Gamal', 'male', 'yearly', 'active'), new User('sarah smith', 'femal', 'qurterly', 'active')];\n  }\n  GetAllUsers() {\n    return this.users;\n  }\n  CreateUser(name, gender, subType, status) {\n    let user = new User(name, gender, subType, status);\n    this.users.push(user);\n    this.logger.logMessage(name, status);\n  }\n}, _class.ɵfac = function UserService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.LoggerService));\n}, _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n}), _class);\nUserService = __decorate([__param(0, Iprivate)], UserService);\nexport { UserService };","map":{"version":3,"names":["User","UserService","_class","constructor","logger","users","GetAllUsers","CreateUser","name","gender","subType","status","user","push","logMessage","i0","ɵɵinject","i1","LoggerService","factory","ɵfac","__decorate","__param","Iprivate"],"sources":["D:\\Angular\\debendency injection manoj\\start\\src\\app\\Services\\user.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { User } from \"../Models/User\";\r\nimport { LoggerService } from \"./logger.service\";\r\n@Injectable()\r\nexport class UserService{\r\n    users: User[] = [\r\n        new User('steve smith','male','monthle','active'),\r\n        new User('Alaa Gamal','male','yearly','active'),\r\n        new User('sarah smith','femal','qurterly','active'),\r\n    ];\r\n    constructor(@Iprivate logger: LoggerService){\r\n\r\n    }\r\n    GetAllUsers(){\r\n        return this.users;\r\n    }\r\n    CreateUser(name: string, gender: string, subType: string, status: string){\r\n       let user = new User(name, gender,subType,status);\r\n       this.users.push(user);\r\n       \r\n       this.logger.logMessage(name, status);\r\n    }\r\n}"],"mappings":";;AACA,SAASA,IAAI,QAAQ,gBAAgB;;;AAErC,IACaC,WAAW,IAAAC,MAAA,GADxB,MACaD,WAAW;EAMpBE,YAAsBC,MAAqB;IAL3C,KAAAC,KAAK,GAAW,CACZ,IAAIL,IAAI,CAAC,aAAa,EAAC,MAAM,EAAC,SAAS,EAAC,QAAQ,CAAC,EACjD,IAAIA,IAAI,CAAC,YAAY,EAAC,MAAM,EAAC,QAAQ,EAAC,QAAQ,CAAC,EAC/C,IAAIA,IAAI,CAAC,aAAa,EAAC,OAAO,EAAC,UAAU,EAAC,QAAQ,CAAC,CACtD;EAGD;EACAM,WAAWA,CAAA;IACP,OAAO,IAAI,CAACD,KAAK;EACrB;EACAE,UAAUA,CAACC,IAAY,EAAEC,MAAc,EAAEC,OAAe,EAAEC,MAAc;IACrE,IAAIC,IAAI,GAAG,IAAIZ,IAAI,CAACQ,IAAI,EAAEC,MAAM,EAACC,OAAO,EAACC,MAAM,CAAC;IAChD,IAAI,CAACN,KAAK,CAACQ,IAAI,CAACD,IAAI,CAAC;IAErB,IAAI,CAACR,MAAM,CAACU,UAAU,CAACN,IAAI,EAAEG,MAAM,CAAC;EACvC;;mBAjBSV,MAAW,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,aAAA;AAAA,G;SAAXjB,MAAW;EAAAkB,OAAA,EAAXlB,MAAW,CAAAmB;AAAA,IAAAlB,MAAA,C;AAAXD,WAAW,GAAAoB,UAAA,EAMPC,OAAA,IAAAC,QAAQ,E,EANZtB,WAAW,CAkBvB;SAlBYA,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}