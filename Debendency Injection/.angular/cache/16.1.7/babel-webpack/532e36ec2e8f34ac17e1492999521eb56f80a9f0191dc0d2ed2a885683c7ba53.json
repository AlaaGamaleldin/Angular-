{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport { User } from \"../Models/User\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./logger.service\";\nclass UserService {\n  constructor(logger) {\n    this.logger = logger;\n    this.users = [new User('steve smith', 'male', 'monthle', 'active'), new User('Alaa Gamal', 'male', 'yearly', 'active'), new User('sarah smith', 'femal', 'qurterly', 'active')];\n    this.OnUserDetailsClicked = new EventEmitter();\n  }\n  OnShowUserDetails() {}\n  GetAllUsers() {\n    return this.users;\n  }\n  CreateUser(name, gender, subType, status) {\n    let user = new User(name, gender, subType, status);\n    this.users.push(user);\n    this.logger.logMessage(name, status);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.LoggerService));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac\n});\nexport { UserService };","map":{"version":3,"names":["EventEmitter","User","UserService","constructor","logger","users","OnUserDetailsClicked","OnShowUserDetails","GetAllUsers","CreateUser","name","gender","subType","status","user","push","logMessage","i0","ɵɵinject","i1","LoggerService","factory","ɵfac"],"sources":["D:\\Angular\\debendency injection manoj\\start\\src\\app\\Services\\user.service.ts"],"sourcesContent":["import { EventEmitter, Inject, Injectable } from \"@angular/core\";\r\nimport { User } from \"../Models/User\";\r\nimport { LoggerService } from \"./logger.service\";\r\nimport { USER_TOKEN } from \"../app.module\";\r\n@Injectable()\r\nexport class UserService{\r\n    users: User[] = [\r\n        new User('steve smith','male','monthle','active'),\r\n        new User('Alaa Gamal','male','yearly','active'),\r\n        new User('sarah smith','femal','qurterly','active'),\r\n    ];\r\n    constructor(private logger: LoggerService){\r\n\r\n    }\r\n    OnUserDetailsClicked: EventEmitter<User> = new EventEmitter<User>();\r\n\r\n    OnShowUserDetails(){\r\n        \r\n    }\r\n    GetAllUsers(){\r\n        return this.users;\r\n    }\r\n    CreateUser(name: string, gender: string, subType: string, status: string){\r\n       let user = new User(name, gender,subType,status);\r\n       this.users.push(user);\r\n       \r\n       this.logger.logMessage(name, status);\r\n    }\r\n}"],"mappings":"AAAA,SAASA,YAAY,QAA4B,eAAe;AAChE,SAASC,IAAI,QAAQ,gBAAgB;;;AAGrC,MACaC,WAAW;EAMpBC,YAAoBC,MAAqB;IAArB,KAAAA,MAAM,GAANA,MAAM;IAL1B,KAAAC,KAAK,GAAW,CACZ,IAAIJ,IAAI,CAAC,aAAa,EAAC,MAAM,EAAC,SAAS,EAAC,QAAQ,CAAC,EACjD,IAAIA,IAAI,CAAC,YAAY,EAAC,MAAM,EAAC,QAAQ,EAAC,QAAQ,CAAC,EAC/C,IAAIA,IAAI,CAAC,aAAa,EAAC,OAAO,EAAC,UAAU,EAAC,QAAQ,CAAC,CACtD;IAID,KAAAK,oBAAoB,GAAuB,IAAIN,YAAY,EAAQ;EADnE;EAGAO,iBAAiBA,CAAA,GAEjB;EACAC,WAAWA,CAAA;IACP,OAAO,IAAI,CAACH,KAAK;EACrB;EACAI,UAAUA,CAACC,IAAY,EAAEC,MAAc,EAAEC,OAAe,EAAEC,MAAc;IACrE,IAAIC,IAAI,GAAG,IAAIb,IAAI,CAACS,IAAI,EAAEC,MAAM,EAACC,OAAO,EAACC,MAAM,CAAC;IAChD,IAAI,CAACR,KAAK,CAACU,IAAI,CAACD,IAAI,CAAC;IAErB,IAAI,CAACV,MAAM,CAACY,UAAU,CAACN,IAAI,EAAEG,MAAM,CAAC;EACvC;;AAtBSX,WAAW,C;mBAAXA,WAAW,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,aAAA;AAAA;AAAXlB,WAAW,C;SAAXA,WAAW;EAAAmB,OAAA,EAAXnB,WAAW,CAAAoB;AAAA;SAAXpB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}